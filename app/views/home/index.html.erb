<div class="min-h-screen bg-gray-50 flex flex-col">
  <!-- Header -->
  <header class="bg-white shadow-sm border-b border-gray-200 px-4 py-3">
    <div class="flex items-center justify-between">
      <h1 class="text-xl font-semibold text-gray-900">Onboarding Buddy</h1>
      <div class="flex items-center space-x-2">
        <span class="material-icons text-gray-600">notifications</span>
        <span class="material-icons text-gray-600">account_circle</span>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <main class="flex-1 overflow-hidden pb-20">
    <!-- Chat Tab Content -->
    <div id="chat-tab" class="h-full flex flex-col <%= 'hidden' unless params[:tab] != 'mood' %>">
      <!-- Task List Section (Top) -->
      <div class="bg-white border-b border-gray-200">
        <div class="px-4 py-3">
          <h2 class="text-lg font-medium text-gray-900 mb-3">今日任務</h2>
          <div class="space-y-2">
            <% @assignments.each do |assignment| %>
              <div class="task-item">
                <div class="flex items-center space-x-3">
                  <% if assignment.done? %>
                    <button onclick="toggleTask(<%= assignment.id %>, false)" class="material-icons text-green-500 hover:text-green-600 transition-colors cursor-pointer" title="點擊取消完成">
                      check_circle
                    </button>
                  <% else %>
                    <button onclick="toggleTask(<%= assignment.id %>, true)" class="material-icons text-gray-400 hover:text-green-500 transition-colors cursor-pointer" title="點擊完成任務">
                      radio_button_unchecked
                    </button>
                  <% end %>
                  <span class="text-sm text-gray-900 flex-1"><%= assignment.onboarding_task.title %></span>
                </div>
                <span class="text-xs <%= assignment.done? ? 'text-green-500' : 'text-gray-500' %>">
                  <%= assignment.done? ? '已完成' : '待完成' %>
                </span>
              </div>
            <% end %>
          </div>
        </div>
      </div>

      <!-- Chat Section (Bottom) -->
      <div class="flex-1 flex flex-col bg-gray-50">
        <div class="flex-1 overflow-y-auto p-4 space-y-4">
          <% if @messages.empty? %>
            <div class="flex justify-start">
              <div class="chat-message bot">
                <p class="text-sm">你好！我是你的入職小助手。有什麼問題需要幫助嗎？</p>
              </div>
            </div>
          <% else %>
            <% @messages.each do |message| %>
              <div class="flex <%= message.user? ? 'justify-end' : 'justify-start' %>">
                <div class="chat-message <%= message.user? ? 'user' : 'bot' %>">
                  <p class="text-sm"><%= message.content %></p>
                </div>
              </div>
            <% end %>
          <% end %>
        </div>

        <!-- Chat Input -->
        <div class="bg-white border-t border-gray-200 p-4">
          <%= form_with url: create_message_path, method: :post, local: true, class: "flex items-center space-x-3" do |form| %>
            <%= form.hidden_field :as, value: params[:as] %>
            <%= form.text_field :message, placeholder: "輸入訊息...", class: "flex-1 px-3 py-2 border border-gray-300 rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent" %>
            <button type="submit" class="bg-primary-500 text-white p-2 rounded-full hover:bg-primary-600 transition-colors">
              <span class="material-icons text-sm">send</span>
            </button>
          <% end %>
        </div>
      </div>
    </div>

    <!-- Mood Check-in Tab Content -->
    <div id="mood-tab" class="h-full flex flex-col <%= 'hidden' if params[:tab] != 'mood' %>">
      <div class="flex-1 p-4">
        <div class="text-center mb-8">
          <h2 class="text-2xl font-bold text-gray-900 mb-2">今日心情</h2>
          <p class="text-gray-600">記錄你的幸福能量</p>
        </div>

        <!-- Happiness Energy Bar -->
        <div class="card p-6 mb-6">
          <div class="text-center mb-4">
            <span class="material-icons text-6xl text-yellow-400 mb-2">emoji_emotions</span>
            <h3 class="text-lg font-semibold text-gray-900">幸福能量條</h3>
          </div>
          
          <!-- Energy Bar -->
          <div class="relative">
            <div class="w-full bg-gray-200 rounded-full h-4 mb-2">
              <% 
                # Calculate energy percentage based on current points
                # Scale: 0-100 points = 0-100%
                energy_percentage = [(@happiness_wallet.current_points || 0) * 1.0, 100].min
                energy_percentage = [energy_percentage, 0].max
              %>
              <div class="bg-gradient-to-r from-red-400 via-yellow-400 to-green-400 h-4 rounded-full transition-all duration-500" style="width: <%= energy_percentage %>%"></div>
            </div>
            <div class="flex justify-between text-xs text-gray-500">
              <span>😔</span>
              <span>😐</span>
              <span>😊</span>
              <span>😄</span>
              <span>🤩</span>
            </div>
          </div>
          
          <div class="text-center mt-4">
            <p class="text-sm text-gray-600">目前能量：<%= energy_percentage.round %>%</p>
            <p class="text-xs text-gray-500">幸福點數：<%= @happiness_wallet.current_points || 0 %> 點</p>
            <p class="text-xs text-gray-500 mt-1">完成任務和記錄心情可以增加能量</p>
          </div>
        </div>

        <!-- Mood Check-in Options -->
        <div class="space-y-3">
          <h4 class="text-md font-medium text-gray-900">快速記錄心情</h4>
          <div class="grid grid-cols-5 gap-2">
            <button onclick="openMoodDialog(1, '😢', '難過')" class="flex flex-col items-center p-3 bg-white rounded-lg border border-gray-200 hover:border-red-300 transition-colors">
              <span class="text-2xl mb-1">😢</span>
              <span class="text-xs text-gray-600">難過</span>
            </button>
            <button onclick="openMoodDialog(2, '😐', '普通')" class="flex flex-col items-center p-3 bg-white rounded-lg border border-gray-200 hover:border-yellow-300 transition-colors">
              <span class="text-2xl mb-1">😐</span>
              <span class="text-xs text-gray-600">普通</span>
            </button>
            <button onclick="openMoodDialog(3, '😊', '開心')" class="flex flex-col items-center p-3 bg-white rounded-lg border border-gray-200 hover:border-green-300 transition-colors">
              <span class="text-2xl mb-1">😊</span>
              <span class="text-xs text-gray-600">開心</span>
            </button>
            <button onclick="openMoodDialog(4, '😄', '興奮')" class="flex flex-col items-center p-3 bg-white rounded-lg border border-gray-200 hover:border-blue-300 transition-colors">
              <span class="text-2xl mb-1">😄</span>
              <span class="text-xs text-gray-600">興奮</span>
            </button>
            <button onclick="openMoodDialog(5, '🤩', '超棒')" class="flex flex-col items-center p-3 bg-white rounded-lg border border-gray-200 hover:border-purple-300 transition-colors">
              <span class="text-2xl mb-1">🤩</span>
              <span class="text-xs text-gray-600">超棒</span>
            </button>
          </div>
        </div>

        <!-- Recent Mood History -->
        <div class="mt-6">
          <h4 class="text-md font-medium text-gray-900 mb-3">最近心情記錄</h4>
          <div class="space-y-2">
            <% if @mood_checkins.any? %>
              <% @mood_checkins.each do |checkin| %>
                <div class="flex items-center justify-between p-3 bg-white rounded-lg border border-gray-200">
                  <div class="flex items-center space-x-3">
                    <span class="text-xl"><%= mood_emoji(checkin.score) %></span>
                    <div>
                      <p class="text-sm text-gray-900"><%= format_mood_date(checkin.created_at) %></p>
                      <p class="text-xs text-gray-500">
                        <%= checkin.note.present? ? checkin.note : mood_description(checkin.score) %>
                      </p>
                    </div>
                  </div>
                  <span class="text-xs text-gray-400"><%= format_mood_time(checkin.created_at) %></span>
                </div>
              <% end %>
            <% else %>
              <div class="text-center py-8 text-gray-500">
                <span class="material-icons text-4xl mb-2">mood</span>
                <p class="text-sm">還沒有心情記錄</p>
                <p class="text-xs">點擊上方按鈕開始記錄你的心情吧！</p>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Bottom Tab Navigation -->
  <nav class="bg-white border-t-2 border-gray-300 flex fixed bottom-0 left-0 right-0 z-50 shadow-lg">
    <button onclick="showTab('chat')" id="chat-tab-btn" class="flex-1 flex flex-col items-center justify-center py-4 px-4 text-sm font-semibold transition-all duration-200 text-blue-600 bg-blue-50 border-r border-gray-200">
      <span class="material-icons mb-1 text-xl">chat</span>
      <span>聊天室</span>
    </button>
    <button onclick="showTab('mood')" id="mood-tab-btn" class="flex-1 flex flex-col items-center justify-center py-4 px-4 text-sm font-semibold transition-all duration-200 text-gray-500 bg-white">
      <span class="material-icons mb-1 text-xl">mood</span>
      <span>心情打卡</span>
    </button>
  </nav>
</div>

<!-- Mood Dialog -->
<div id="mood-dialog" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full p-6">
      <div class="text-center mb-6">
        <div id="mood-emoji" class="text-6xl mb-3">😊</div>
        <h3 class="text-xl font-semibold text-gray-900 mb-2">記錄你的心情</h3>
        <p class="text-gray-600">告訴我們你今天感覺如何？</p>
      </div>
      
      <%= form_with url: my_mood_checkins_path, method: :post, local: true, id: "mood-form" do |form| %>
        <%= form.hidden_field :as, value: params[:as] %>
        <%= form.hidden_field :score, id: "mood-score" %>
        
        <div class="mb-4">
          <label class="block text-sm font-medium text-gray-700 mb-2">心情筆記（選填）</label>
          <%= form.text_area :note, placeholder: "分享你今天的心情或想法...", class: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none", rows: 3 %>
        </div>
        
        <div class="flex space-x-3">
          <button type="button" onclick="closeMoodDialog()" class="flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
            取消
          </button>
          <button type="submit" class="flex-1 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors">
            記錄心情
          </button>
        </div>
      <% end %>
    </div>
  </div>
</div>

<!-- Encouragement Toast -->
<div id="encouragement-toast" class="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 hidden">
  <div class="bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center space-x-3">
    <span class="material-icons text-2xl">celebration</span>
    <div>
      <p class="font-semibold" id="encouragement-title">太棒了！</p>
      <p class="text-sm" id="encouragement-message">感謝你分享心情！</p>
    </div>
  </div>
</div>

<script>
function showTab(tabName) {
  // Hide all tabs
  document.getElementById('chat-tab').classList.add('hidden');
  document.getElementById('mood-tab').classList.add('hidden');
  
  // Reset all buttons to inactive state
  document.getElementById('chat-tab-btn').className = 'flex-1 flex flex-col items-center justify-center py-4 px-4 text-sm font-semibold transition-all duration-200 text-gray-500 bg-white';
  document.getElementById('mood-tab-btn').className = 'flex-1 flex flex-col items-center justify-center py-4 px-4 text-sm font-semibold transition-all duration-200 text-gray-500 bg-white';
  
  // Show selected tab and update button
  if (tabName === 'chat') {
    document.getElementById('chat-tab').classList.remove('hidden');
    document.getElementById('chat-tab-btn').className = 'flex-1 flex flex-col items-center justify-center py-4 px-4 text-sm font-semibold transition-all duration-200 text-blue-600 bg-blue-50 border-r border-gray-200';
  } else if (tabName === 'mood') {
    document.getElementById('mood-tab').classList.remove('hidden');
    document.getElementById('mood-tab-btn').className = 'flex-1 flex flex-col items-center justify-center py-4 px-4 text-sm font-semibold transition-all duration-200 text-blue-600 bg-blue-50';
  }
}

function openMoodDialog(score, emoji, label) {
  document.getElementById('mood-score').value = score;
  document.getElementById('mood-emoji').textContent = emoji;
  document.getElementById('mood-dialog').classList.remove('hidden');
}

function closeMoodDialog() {
  document.getElementById('mood-dialog').classList.add('hidden');
  document.getElementById('mood-form').reset();
}

function showEncouragement(score) {
  const encouragementMessages = {
    1: { title: "沒關係的", message: "每個人都會有低潮，你並不孤單 💙" },
    2: { title: "慢慢來", message: "給自己一些時間，一切都會好起來的 🌱" },
    3: { title: "很好！", message: "保持這樣的心情，繼續加油！ ✨" },
    4: { title: "太棒了！", message: "你的好心情感染了我們！ 🌟" },
    5: { title: "超讚！", message: "你的正能量滿滿，繼續發光發熱！ 🚀" }
  };
  
  const encouragement = encouragementMessages[score] || encouragementMessages[3];
  document.getElementById('encouragement-title').textContent = encouragement.title;
  document.getElementById('encouragement-message').textContent = encouragement.message;
  
  const toast = document.getElementById('encouragement-toast');
  toast.classList.remove('hidden');
  
  // Auto hide after 3 seconds
  setTimeout(() => {
    toast.classList.add('hidden');
  }, 3000);
}

// Handle form submission
document.addEventListener('DOMContentLoaded', function() {
  const moodForm = document.getElementById('mood-form');
  if (moodForm) {
    moodForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const submitButton = moodForm.querySelector('button[type="submit"]');
      const originalText = submitButton.textContent;
      
      // Disable submit button to prevent double submission
      submitButton.disabled = true;
      submitButton.textContent = '提交中...';
      
      const formData = new FormData(moodForm);
      const score = parseInt(formData.get('score'));
      
      // Submit form via fetch
      fetch(moodForm.action, {
        method: 'POST',
        body: formData,
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          'Accept': 'application/json'
        }
      })
      .then(response => {
        if (response.ok) {
          return response.json();
        } else {
          throw new Error('Network response was not ok');
        }
      })
      .then(data => {
        closeMoodDialog();
        showMoodFeedback(data.feedback, data.suggestions, data.show_resources);
        // Reset form and button state
        moodForm.reset();
        submitButton.disabled = false;
        submitButton.textContent = originalText;
      })
      .catch(error => {
        console.error('Error:', error);
        alert('提交失敗，請重試');
        // Reset button state on error
        submitButton.disabled = false;
        submitButton.textContent = originalText;
      });
    });
  }
});

// Close dialog when clicking outside
document.getElementById('mood-dialog').addEventListener('click', function(e) {
  if (e.target === this) {
    closeMoodDialog();
  }
});

// Task completion functionality
function toggleTask(assignmentId, complete) {
  const status = complete ? 'done' : 'pending';
  
  // Show loading state
  const button = event.target;
  const originalText = button.textContent;
  button.textContent = '...';
  button.disabled = true;
  
  fetch(`/my/onboarding/complete/${assignmentId}`, {
    method: 'PATCH',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
      'Accept': 'application/json'
    },
    body: JSON.stringify({ status: status, as: '<%= params[:as] %>' })
  })
  .then(response => {
    if (response.ok) {
      return response.json();
    } else {
      throw new Error('Network response was not ok');
    }
  })
  .then(data => {
    // Show success message
    showTaskSuccessMessage(data.message || 'Task updated successfully!');
    // Reload the page to show updated status
    setTimeout(() => {
      window.location.reload();
    }, 1000);
  })
  .catch(error => {
    console.error('Error:', error);
    // Restore button state
    button.textContent = originalText;
    button.disabled = false;
    alert('更新任務狀態失敗，請重試');
  });
}

// Show task success message
function showTaskSuccessMessage(message) {
  // Create a temporary success message
  const successDiv = document.createElement('div');
  successDiv.className = 'fixed top-4 left-1/2 transform -translate-x-1/2 z-50 bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg flex items-center space-x-3';
  successDiv.innerHTML = `
    <span class="material-icons text-2xl">check_circle</span>
    <div>
      <p class="font-semibold">Success!</p>
      <p class="text-sm">${message}</p>
    </div>
  `;
  
  document.body.appendChild(successDiv);
  
  // Remove after 2 seconds
  setTimeout(() => {
    successDiv.remove();
  }, 2000);
}

// Show mood feedback and suggestions
function showMoodFeedback(feedback, suggestions, showResources) {
  // Create feedback modal
  const feedbackModal = document.createElement('div');
  feedbackModal.id = 'mood-feedback-modal';
  feedbackModal.className = 'fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4';
  feedbackModal.innerHTML = `
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full p-6">
      <div class="text-center mb-6">
        <span class="material-icons text-6xl text-blue-500 mb-3">mood</span>
        <h3 class="text-xl font-semibold text-gray-900 mb-2">感謝分享</h3>
        <p class="text-gray-600">${feedback}</p>
      </div>
      
      ${suggestions.length > 0 ? `
        <div class="mb-6">
          <h4 class="text-md font-medium text-gray-900 mb-3">建議</h4>
          <div class="space-y-2">
            ${suggestions.map(suggestion => `
              <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                <div>
                  <p class="text-sm font-medium text-gray-900">${suggestion.title}</p>
                  <p class="text-xs text-gray-500">${suggestion.description}</p>
                </div>
                <button onclick="handleSuggestion('${suggestion.type}')" class="text-blue-500 hover:text-blue-600 text-sm font-medium">
                  ${suggestion.action}
                </button>
              </div>
            `).join('')}
          </div>
        </div>
      ` : ''}
      
      ${showResources ? `
        <div class="mb-6 p-4 bg-blue-50 rounded-lg">
          <div class="flex items-center space-x-2 mb-2">
            <span class="material-icons text-blue-500">info</span>
            <h4 class="text-sm font-medium text-blue-900">我們注意到你最近心情不太好</h4>
          </div>
          <p class="text-xs text-blue-700">公司有很多支援資源可以幫助你，不要猶豫尋求幫助。</p>
        </div>
      ` : ''}
      
      <div class="flex justify-center">
        <button onclick="closeFeedbackModal()" class="px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors">
          知道了
        </button>
      </div>
    </div>
  `;
  
  document.body.appendChild(feedbackModal);
}

// Close feedback modal
function closeFeedbackModal() {
  const modal = document.getElementById('mood-feedback-modal');
  if (modal) {
    modal.remove();
  }
}

// Handle suggestion actions
function handleSuggestion(type) {
  switch(type) {
    case 'breathing':
      alert('呼吸練習：深吸氣 4 秒，屏氣 4 秒，呼氣 4 秒，重複幾次。');
      break;
    case 'social':
      alert('你可以聯繫 HR 部門或同事聊聊，他們都很樂意幫助你。');
      break;
    case 'hr_event':
      alert('HR 小聚會：每週五下午 3:00，地點在會議室 A。');
      break;
    case 'wellness':
      alert('員工健康資源：請查看公司內部網站或聯繫 HR 了解更多。');
      break;
    default:
      alert('感謝你的關注！');
  }
}
</script>
